<?xml version="1.0" encoding="UTF-8"?>
<testsuites name="jest tests" tests="50" failures="0" errors="0" time="0.605">
  <testsuite name="Email Notifications API" errors="0" failures="0" skipped="0" timestamp="2025-10-23T18:06:27" time="0.148" tests="11">
    <testcase classname="Email Notifications API POST /api/notifications/email should send calendar notification successfully" name="Email Notifications API POST /api/notifications/email should send calendar notification successfully" time="0.002">
    </testcase>
    <testcase classname="Email Notifications API POST /api/notifications/email should test email service connection successfully" name="Email Notifications API POST /api/notifications/email should test email service connection successfully" time="0">
    </testcase>
    <testcase classname="Email Notifications API POST /api/notifications/email should return 400 for missing notification data" name="Email Notifications API POST /api/notifications/email should return 400 for missing notification data" time="0">
    </testcase>
    <testcase classname="Email Notifications API POST /api/notifications/email should return 400 for invalid action" name="Email Notifications API POST /api/notifications/email should return 400 for invalid action" time="0">
    </testcase>
    <testcase classname="Email Notifications API POST /api/notifications/email should return 401 for unauthenticated user" name="Email Notifications API POST /api/notifications/email should return 401 for unauthenticated user" time="0">
    </testcase>
    <testcase classname="Email Notifications API POST /api/notifications/email should handle email sending failure" name="Email Notifications API POST /api/notifications/email should handle email sending failure" time="0">
    </testcase>
    <testcase classname="Email Notifications API POST /api/notifications/email should handle email service connection failure" name="Email Notifications API POST /api/notifications/email should handle email service connection failure" time="0">
    </testcase>
    <testcase classname="Email Notifications API GET /api/notifications/email should return email service status successfully" name="Email Notifications API GET /api/notifications/email should return email service status successfully" time="0.001">
    </testcase>
    <testcase classname="Email Notifications API GET /api/notifications/email should return email service configuration issue" name="Email Notifications API GET /api/notifications/email should return email service configuration issue" time="0">
    </testcase>
    <testcase classname="Email Notifications API GET /api/notifications/email should return 401 for unauthenticated user" name="Email Notifications API GET /api/notifications/email should return 401 for unauthenticated user" time="0">
    </testcase>
    <testcase classname="Email Notifications API GET /api/notifications/email should handle service errors gracefully" name="Email Notifications API GET /api/notifications/email should handle service errors gracefully" time="0.014">
    </testcase>
  </testsuite>
  <testsuite name="EmailNotificationService" errors="0" failures="0" skipped="0" timestamp="2025-10-23T18:06:27" time="0.075" tests="16">
    <testcase classname="EmailNotificationService constructor should initialize with environment variables" name="EmailNotificationService constructor should initialize with environment variables" time="0">
    </testcase>
    <testcase classname="EmailNotificationService constructor should initialize with custom config" name="EmailNotificationService constructor should initialize with custom config" time="0.001">
    </testcase>
    <testcase classname="EmailNotificationService sendCalendarNotification should send appointment confirmation email successfully" name="EmailNotificationService sendCalendarNotification should send appointment confirmation email successfully" time="0.017">
    </testcase>
    <testcase classname="EmailNotificationService sendCalendarNotification should send appointment reminder email successfully" name="EmailNotificationService sendCalendarNotification should send appointment reminder email successfully" time="0.002">
    </testcase>
    <testcase classname="EmailNotificationService sendCalendarNotification should send appointment cancellation email successfully" name="EmailNotificationService sendCalendarNotification should send appointment cancellation email successfully" time="0.002">
    </testcase>
    <testcase classname="EmailNotificationService sendCalendarNotification should send appointment modification email successfully" name="EmailNotificationService sendCalendarNotification should send appointment modification email successfully" time="0.001">
    </testcase>
    <testcase classname="EmailNotificationService sendCalendarNotification should handle email sending failure" name="EmailNotificationService sendCalendarNotification should handle email sending failure" time="0.005">
    </testcase>
    <testcase classname="EmailNotificationService sendCalendarNotification should handle missing recipient email gracefully" name="EmailNotificationService sendCalendarNotification should handle missing recipient email gracefully" time="0.001">
    </testcase>
    <testcase classname="EmailNotificationService testConnection should verify SMTP connection successfully" name="EmailNotificationService testConnection should verify SMTP connection successfully" time="0">
    </testcase>
    <testcase classname="EmailNotificationService testConnection should handle connection verification failure" name="EmailNotificationService testConnection should handle connection verification failure" time="0">
    </testcase>
    <testcase classname="EmailNotificationService email templates should generate correct confirmation email template" name="EmailNotificationService email templates should generate correct confirmation email template" time="0.002">
    </testcase>
    <testcase classname="EmailNotificationService email templates should generate correct reminder email template" name="EmailNotificationService email templates should generate correct reminder email template" time="0.001">
    </testcase>
    <testcase classname="EmailNotificationService email templates should handle events without location" name="EmailNotificationService email templates should handle events without location" time="0.002">
    </testcase>
    <testcase classname="EmailNotificationService email templates should handle events without description" name="EmailNotificationService email templates should handle events without description" time="0.003">
    </testcase>
    <testcase classname="EmailNotificationService error handling should handle unknown errors gracefully" name="EmailNotificationService error handling should handle unknown errors gracefully" time="0.002">
    </testcase>
    <testcase classname="EmailNotificationService error handling should handle network timeouts" name="EmailNotificationService error handling should handle network timeouts" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="NotificationService" errors="0" failures="0" skipped="0" timestamp="2025-10-23T18:06:28" time="0.039" tests="13">
    <testcase classname="NotificationService scheduleAppointmentReminders should schedule confirmation and reminder notifications" name="NotificationService scheduleAppointmentReminders should schedule confirmation and reminder notifications" time="0.003">
    </testcase>
    <testcase classname="NotificationService scheduleAppointmentReminders should handle email sending failure gracefully" name="NotificationService scheduleAppointmentReminders should handle email sending failure gracefully" time="0.001">
    </testcase>
    <testcase classname="NotificationService scheduleAppointmentReminders should not schedule reminders for past events" name="NotificationService scheduleAppointmentReminders should not schedule reminders for past events" time="0">
    </testcase>
    <testcase classname="NotificationService scheduleAppointmentReminders should handle events without attendees" name="NotificationService scheduleAppointmentReminders should handle events without attendees" time="0.001">
    </testcase>
    <testcase classname="NotificationService sendAppointmentConfirmation should send confirmation email successfully" name="NotificationService sendAppointmentConfirmation should send confirmation email successfully" time="0">
    </testcase>
    <testcase classname="NotificationService sendAppointmentConfirmation should handle email sending failure" name="NotificationService sendAppointmentConfirmation should handle email sending failure" time="0.001">
    </testcase>
    <testcase classname="NotificationService sendAppointmentReminder should send reminder email successfully" name="NotificationService sendAppointmentReminder should send reminder email successfully" time="0">
    </testcase>
    <testcase classname="NotificationService sendAppointmentCancellation should send cancellation email successfully" name="NotificationService sendAppointmentCancellation should send cancellation email successfully" time="0.001">
    </testcase>
    <testcase classname="NotificationService sendAppointmentModification should send modification email successfully" name="NotificationService sendAppointmentModification should send modification email successfully" time="0">
    </testcase>
    <testcase classname="NotificationService testEmailService should test email service connection successfully" name="NotificationService testEmailService should test email service connection successfully" time="0">
    </testcase>
    <testcase classname="NotificationService testEmailService should handle email service connection failure" name="NotificationService testEmailService should handle email service connection failure" time="0">
    </testcase>
    <testcase classname="NotificationService error handling should handle unknown errors gracefully" name="NotificationService error handling should handle unknown errors gracefully" time="0.001">
    </testcase>
    <testcase classname="NotificationService error handling should handle network timeouts" name="NotificationService error handling should handle network timeouts" time="0.002">
    </testcase>
  </testsuite>
  <testsuite name="Test Email API" errors="0" failures="0" skipped="0" timestamp="2025-10-23T18:06:28" time="0.045" tests="10">
    <testcase classname="Test Email API POST /api/test-email should send test email successfully" name="Test Email API POST /api/test-email should send test email successfully" time="0.002">
    </testcase>
    <testcase classname="Test Email API POST /api/test-email should send test email with default test type" name="Test Email API POST /api/test-email should send test email with default test type" time="0">
    </testcase>
    <testcase classname="Test Email API POST /api/test-email should return 400 for missing recipient email" name="Test Email API POST /api/test-email should return 400 for missing recipient email" time="0.001">
    </testcase>
    <testcase classname="Test Email API POST /api/test-email should return 401 for unauthenticated user" name="Test Email API POST /api/test-email should return 401 for unauthenticated user" time="0">
    </testcase>
    <testcase classname="Test Email API POST /api/test-email should handle email sending failure" name="Test Email API POST /api/test-email should handle email sending failure" time="0">
    </testcase>
    <testcase classname="Test Email API POST /api/test-email should handle service errors gracefully" name="Test Email API POST /api/test-email should handle service errors gracefully" time="0.003">
    </testcase>
    <testcase classname="Test Email API GET /api/test-email should return email service status successfully" name="Test Email API GET /api/test-email should return email service status successfully" time="0">
    </testcase>
    <testcase classname="Test Email API GET /api/test-email should return email service configuration issue" name="Test Email API GET /api/test-email should return email service configuration issue" time="0.001">
    </testcase>
    <testcase classname="Test Email API GET /api/test-email should return 401 for unauthenticated user" name="Test Email API GET /api/test-email should return 401 for unauthenticated user" time="0">
    </testcase>
    <testcase classname="Test Email API GET /api/test-email should handle service errors gracefully" name="Test Email API GET /api/test-email should handle service errors gracefully" time="0">
    </testcase>
  </testsuite>
</testsuites>